{"version":3,"sources":["data/post.js","data/auth.js","store/index.js","Component/Login.js","Component/EventComponent.js","Component/ImageComponent.js","Component/TitleComponent.js","Component/DescriptionComponent.js","Component/BookComponent.js","Component/BookListComponent.js","Dashboard.js","Main.js","index.js"],"names":["postData","books","title","path","id","login","registrationClass","loginClass","userList","username","password","authenticated","fakeAuthProvider","isAuthenticated","email","signin","userData","authenticatedValue","signout","updateAuth","action","error","store","createStore","state","arguments","length","undefined","console","log","type","val","filter","usernameLogin","passwordLogin","push","book","photoData","EventComponent","props","position","React","createElement","className","ImageComponent","src","alt","TitleComponent","DescriptionComponent","BookComponent","removeHanlder","Math","random","onClick","e","BookListComponent","Fragment","map","index","Object","assign","key","Dashboard","Component","constructor","porps","super","this","bind","bookRd","componentDidMount","setState","render","connect","mapDispatchToProps","dispatch","ownProps","bookData","router","createBrowserRouter","loader","user","Outlet","children","async","request","formData","redirectTo","get","redirect","LoginComponent","useDispatch","navigate","useNavigate","setFormData","useState","confirmPassword","formDataLogin","setFormDataLogin","errors","setErrors","handleChange","name","value","target","handleChangeLogin","loginValue","useSelector","onSubmit","preventDefault","validationErrors","trim","test","keys","FormData","currentTarget","fromEntries","reset","autoComplete","onChange","placeholder","Main","RouterProvider","fallbackElement","ReactDOM","createRoot","document","getElementById","StrictMode","Provider"],"mappings":"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","file":"static/js/main.065eb134.chunk.js","sourcesContent":["const postData = {\r\n    books : [\r\n        {title: 'One for the Blackbird', path: './assets/pic1.jpg', id:0},\r\n        {title: 'The Cipher', path: './assets/pic2.jpg', id:1},\r\n        {title: 'The Family accross the street', path: './assets/pic3.jpg', id:2},\r\n        {title: 'Wrong Place Wrong Time', path: './assets/pic4.jpg', id:3},\r\n        {title: 'The Love of my Life', path: './assets/pic5.jpg', id:4},\r\n        {title: 'Twenty Years Later', path: './assets/pic6.jpg', id:5}\r\n    ],\r\n    login: {\r\n        registrationClass : \"register-form\",\r\n        loginClass : \"login-form\"\r\n    },\r\n    userList: [{username: 'Alex', password: '123456'}],\r\n    authenticated: false\r\n};\r\n\r\nexport default postData;","// interface AuthProvider {\r\n//     isAuthenticated: boolean;\r\n//     username: null | string;\r\n//     email: null | string;\r\n//     signin(username: string): Promise<void>;\r\n//     signout(): Promise<void>;\r\n//   }\r\n  \r\n  /**\r\n   * This represents some generic auth provider API, like Firebase.\r\n   */\r\n  export const fakeAuthProvider = {\r\n    isAuthenticated: false,\r\n    username: null,\r\n    email: null,\r\n    signin(userData, authenticatedValue) {\r\n      // new Promise((r) => setTimeout(r, 500)); // fake delay\r\n      fakeAuthProvider.isAuthenticated = authenticatedValue;\r\n      fakeAuthProvider.username = userData.username;\r\n    },\r\n    signout() {\r\n      // await new Promise((r) => setTimeout(r, 500)); // fake delay\r\n      fakeAuthProvider.isAuthenticated = false;\r\n      fakeAuthProvider.username = \"\";\r\n    },\r\n  };\r\n  ","import {createStore} from 'redux';\r\nimport postData from '../data/post';\r\nimport { fakeAuthProvider } from '../data/auth';\r\n\r\n\r\nconst postReducer = function posts(state = postData, action){\r\n    console.log('ACT ',action, state)\r\n    if(action.type === 'create-view'){\r\n        return {\r\n            ...state,\r\n            login:{\r\n                registrationClass : \"login-form\",\r\n                loginClass : \"register-form\"\r\n              }\r\n        }\r\n    }\r\n    else if (action.type === 'sign-in-view') {\r\n        return {\r\n            ...state,\r\n            login: {\r\n                registrationClass : \"register-form\",\r\n                loginClass : \"login-form\"\r\n              }\r\n        }\r\n    }\r\n    else if (action.type === 'sign-in-user'){\r\n        let val = state.userList || postData.userList;\r\n        let authenticatedValue = val.filter(val => val.username === action.userData.usernameLogin\r\n            && val.password === action.userData.passwordLogin).length >= 1;\r\n            \r\n        console.log('STORE DATA ',val, 'USER DATA ', action.userData, authenticatedValue)\r\n        updateAuth(action, authenticatedValue);\r\n        return {\r\n            ...state,\r\n            authenticated : authenticatedValue\r\n        }\r\n    }\r\n    else if (action.type === 'create-user'){\r\n        let val = state.userList || postData.userList;\r\n        console.log(state.userList, postData.userList)\r\n        val.push(action.userData)\r\n        return {\r\n            ...state,\r\n            userList: [...val]\r\n        }\r\n    }\r\n\r\n    else if (action.type === 'remove_photo'){\r\n        return {\r\n            ...state,\r\n            books : state.books.filter(book => book.id !== action.photoData.id)\r\n        }\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nfunction updateAuth (action,authenticatedValue){\r\n    try {\r\n        fakeAuthProvider.signin(action.userData,authenticatedValue);\r\n      } catch (error) {\r\n        // Unused as of now but this is how you would handle invalid\r\n        // username/password combinations - just like validating the inputs\r\n        // above\r\n        return {\r\n          error: \"Invalid login attempt\",\r\n        };\r\n    }\r\n}\r\nconst store = createStore(postReducer);\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const LoginComponent = ()=> {\r\n  let dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n  const [formDataLogin, setFormDataLogin] = useState({\r\n    usernameLogin: '',\r\n    passwordLogin: ''\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setFormData({\r\n        ...formData, [name] : value\r\n    })\r\n  }\r\n  \r\n  const handleChangeLogin = (e) => {\r\n    const {name, value} = e.target;\r\n    setFormDataLogin({\r\n        ...formDataLogin, [name] : value\r\n    })\r\n  }\r\n  let loginValue = useSelector((state) => {\r\n    // console.log('STATE VALUE ', state)\r\n    if(state.authenticated){\r\n      \r\n    }\r\n    return state.login});\r\n\r\n    const  signInViewHandler =  (e)=> {\r\n      dispatch({type: 'sign-in-view'});\r\n    }\r\n\r\n    const  createViewHandler =  (e)=> {\r\n      dispatch({type: 'create-view'});\r\n    }\r\n\r\n    const createHandler =  (e)=> {\r\n      e.preventDefault();\r\n      const validationErrors = {}\r\n    if(!formData.username.trim()) {\r\n        validationErrors.username = \"username is required\"\r\n    }\r\n\r\n    if(!formData.email.trim()) {\r\n        validationErrors.email = \"email is required\"\r\n    } else if(!/\\S+@\\S+\\.\\S+/.test(formData.email)){\r\n        validationErrors.email = \"email is not valid\"\r\n    }\r\n\r\n    if(!formData.password.trim()) {\r\n        validationErrors.password = \"password is required\"\r\n    } else if(formData.password.length < 6){\r\n        validationErrors.password = \"password should be at least 6 char\"\r\n    }\r\n\r\n    if(formData.confirmPassword !== formData.password) {\r\n        validationErrors.confirmPassword = \"password not matched\"\r\n    }\r\n\r\n    setErrors(validationErrors)\r\n\r\n    if(Object.keys(validationErrors).length === 0) {\r\n      const formData = new FormData(e.currentTarget);\r\n      const userData = Object.fromEntries(formData);\r\n        dispatch({type: 'create-user',userData: userData});\r\n        e.target.reset();\r\n      }\r\n        \r\n      }\r\n    \r\n    const loginHandler =  (e)=> {\r\n      e.preventDefault();\r\n      const validationErrors = {}\r\n      const formData = new FormData(e.currentTarget);\r\n      const userData = Object.fromEntries(formData);\r\n      // console.log('USERDATA ',userData)\r\n      if(!userData.usernameLogin.trim()) {\r\n          validationErrors.usernameLogin = \"username is required\"\r\n      }\r\n      if(!userData.passwordLogin.trim()) {\r\n        validationErrors.passwordLogin = \"password is required\"\r\n      }\r\n      setErrors(validationErrors)\r\n\r\n      if(Object.keys(validationErrors).length === 0) {\r\n        dispatch({type: 'sign-in-user',userData: userData});\r\n        e.target.reset();\r\n        navigate(\"/dashboard\");\r\n      }\r\n    }\r\n\r\n      return (\r\n           <div className=\"login-page\">\r\n              <div className=\"form\">\r\n                <form className={loginValue.registrationClass} onSubmit={createHandler}>\r\n                  <input name=\"username\" autoComplete='off'  \r\n                    onChange={handleChange} type=\"text\" placeholder=\"Name\"/>\r\n                    {errors.username && <span>{errors.username}</span>} \r\n                  <input name=\"password\" autoComplete='off'  \r\n                    onChange={handleChange}  type=\"password\" placeholder=\"Password\"/>\r\n                    {errors.password && <span>{errors.password}</span>} \r\n                  <input name=\"confirmPassword\" autoComplete='off'  \r\n                    onChange={handleChange}  type=\"password\" placeholder=\"Confirm Password\"/>\r\n                    {errors.confirmPassword && <span>{errors.confirmPassword}</span>} \r\n                  <input name=\"email\" type=\"text\" autoComplete='off'  \r\n                    onChange={handleChange}  placeholder=\"Email Address\"/>\r\n                    {errors.email && <span>{errors.email}</span>} \r\n                  <button>create</button>\r\n                  <p className=\"message\">Already registered? <a className=\"clickable\" onClick={signInViewHandler}>Sign In</a></p>\r\n                  \r\n                </form>\r\n                <form className={loginValue.loginClass} onSubmit={loginHandler}>\r\n                  <input name=\"usernameLogin\" autoComplete='off'  \r\n                    onChange={handleChangeLogin} type=\"text\" placeholder=\"Username\"/>\r\n                  {errors.username && <span>{errors.username}</span>} \r\n                  <input name=\"passwordLogin\" autoComplete='off'  \r\n                    onChange={handleChangeLogin} type=\"password\" placeholder=\"Password\"/>\r\n                  {errors.password && <span>{errors.password}</span>} \r\n                  <button>login</button>\r\n                  <p className=\"message\">Not registered? <a className=\"clickable\" onClick={createViewHandler}>Create an account</a></p>\r\n                  \r\n                </form>\r\n              </div>\r\n            </div>\r\n    )\r\n}   ","import React from 'react';\r\n\r\nexport const EventComponent = (props) =>{\r\n    let {position} = props\r\n    return <span className=\"number\">{position}</span>\r\n}","import React from 'react';\r\n\r\nexport const ImageComponent = (props)=> {\r\n    // return <img src='https://images-na.ssl-images-amazon.com/images/I/81yfsIOijJL._AC_UL381_SR381,381_.jpg' alt='American Prometheus: The Inspiration for the Major '></img>\r\n    return <img src={props.path} alt='American Prometheus: The Inspiration for the Major '></img>\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const TitleComponent = (props)=> {\r\n    return <h1>{props.title}</h1>\r\n}","import React from 'react';\r\n\r\nexport const DescriptionComponent = ()=> {\r\n    const des = \"Description placeholder\"\r\n    return <h1>{des}</h1>\r\n}","import { EventComponent } from \"./EventComponent\";\r\nimport {ImageComponent} from \"./ImageComponent\"\r\nimport { TitleComponent } from \"./TitleComponent\";\r\nimport { DescriptionComponent } from \"./DescriptionComponent\";\r\nimport React from 'react';\r\n\r\nexport const BookComponent =(props) =>{\r\n    // console.log('CHECK ',props)\r\n    let {id, removeHanlder, title, className} = props;\r\n    id = Math.random() * 100;\r\n    const clickMeHandler = (e) => {\r\n        removeHanlder(props)\r\n    }\r\n    return <article className='book'>\r\n        <EventComponent position={props.position}/>\r\n        <ImageComponent path={props.path}/>\r\n        <TitleComponent title={props.title}/>\r\n        <DescriptionComponent/>\r\n        <button className=\"remove-button\" onClick={clickMeHandler}>Delete</button>\r\n    </article>\r\n}","import React from 'react';\r\nimport {BookComponent} from \"./BookComponent\";\r\n\r\nexport const BookListComponent =(props) =>{\r\n    return <>\r\n    <h1> Book - Best Sellers</h1>\r\n    <section className='bookList'>\r\n         {props.books.map((book, index)=>{\r\n            return  <BookComponent {...book} removeHanlder={props.removeHanlder} position={index +1} key={index}/>\r\n            \r\n        })}\r\n     </section>\r\n     </>\r\n\r\n}","import React, { Component} from 'react';\r\nimport { BookListComponent } from './Component/BookListComponent';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Dashboard extends Component{\r\n    constructor(porps){\r\n        super(porps);\r\n        this.removeHanlder = this.removeHanlder.bind(this);\r\n    }\r\n\r\n    removeHanlder(bookRd) {\r\n        console.log('REMOVE GOT ', bookRd, this.state.books);\r\n        // this.setState((state) => ({\r\n        //     books : state.books.filter(book => book.id !== bookRd.id)\r\n        // }))\r\n        this.props.removeHanlder(bookRd)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const booksList = [];\r\n\r\n        this.setState({\r\n            books : booksList\r\n        })\r\n       \r\n    }\r\n    render(){\r\n        return <BookListComponent books={this.props.books} removeHanlder={this.removeHanlder}/> \r\n    }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n    // console.log('INCOMING STATE ', state)\r\n    return {books : state.books,\r\n            authenticated: state.authenticated}\r\n }\r\n//  function doTableActions(newValue, currentYear) {\r\n//     return (dispatch, getState) => {\r\n//         dispatch(updateAttributeSelection('genre', newValue));\r\n//         let state = getState();\r\n//         // do some logic based on state, and then:\r\n//         dispatch(getTableData(newValue, currentYear));\r\n//     }\r\n// }\r\n const mapDispatchToProps =(dispatch, ownProps) => {\r\n    return({\r\n        removeHanlder: (bookData) => {dispatch({type:'remove_photo', photoData: bookData})}\r\n    })\r\n }\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react';\r\nimport { RouterProvider, Outlet, createBrowserRouter, redirect } from \"react-router-dom\"\r\nimport { LoginComponent } from \"./Component/Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { fakeAuthProvider } from './data/auth';\r\nconst router = createBrowserRouter([\r\n  {\r\n    id: \"root\",\r\n    path: \"/\",\r\n    loader() {\r\n      // Our root route always provides the user, if logged in\r\n      return { user: fakeAuthProvider.username };\r\n    },\r\n    Component: Layout,\r\n    children: [\r\n      // {\r\n      //   index: true,\r\n      //   Component: LoginComponent,\r\n      // },\r\n      {\r\n        path: \"\",\r\n        action: loginAction,\r\n        Component: LoginComponent,\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        loader: protectedLoader,\r\n        Component: Dashboard,\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    path: \"/logout\",\r\n    async action() {\r\n      // We signout in a \"resource route\" that we can hit from a fetcher.Form\r\n      await fakeAuthProvider.signout();\r\n      return redirect(\"/\");\r\n    },\r\n  },\r\n]);\r\n\r\nfunction Main() {\r\n\r\n return (\r\n   \r\n    // <Routes >\r\n    //   <Route path=\"/\" element={ <LoginComponent /> } />\r\n    //   <Route path=\"/dashboard\" element={ <Dashboard /> } />\r\n    // </Routes>\r\n    <RouterProvider router={router} fallbackElement={<p>Initial Load...</p>} />\r\n )\r\n}\r\n\r\nfunction Layout() {\r\n  return (\r\n    \r\n    <div>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction protectedLoader( request) {\r\n  // If the user is not logged in and tries to access `/protected`, we redirect\r\n  // them to `/login` with a `from` parameter that allows login to redirect back\r\n  // to this page upon successful authentication\r\n  console.log('CHECK ', fakeAuthProvider, request)\r\n  if (!fakeAuthProvider.isAuthenticated) {\r\n    console.log('CHECK 222 ', fakeAuthProvider)\r\n    return redirect(\"/\");\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function loginAction( request ) {\r\n  let formData = await request;\r\n  \r\n  console.log('LOGIN ACTION ',formData)\r\n  // Sign in and redirect to the proper destination if successful.\r\n  try {\r\n    await fakeAuthProvider.signin(\"\");\r\n  } catch (error) {\r\n    // Unused as of now but this is how you would handle invalid\r\n    // username/password combinations - just like validating the inputs\r\n    // above\r\n    return {\r\n      error: \"Invalid login attempt\",\r\n    };\r\n  }\r\n\r\n  let redirectTo = formData.get(\"redirectTo\");\r\n  return redirect(redirectTo || \"/\");\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Main from './Main';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <Main />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}